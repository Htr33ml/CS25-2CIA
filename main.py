import streamlit as st
import pandas as pd
import gspread
import json
import os
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime
import hashlib

# ğŸ”¹ ConfiguraÃ§Ã£o do Google Sheets
scope = ["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
creds_json = os.getenv('GOOGLE_SHEET_CREDENTIALS_JSON')
creds_dict = json.loads(creds_json)
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
client = gspread.authorize(creds)

# ğŸ”¹ Acessando planilhas
sheet = client.open("RelatÃ³rio de Conscritos").sheet1
users_sheet = client.open("RelatÃ³rio de Conscritos").worksheet("Usuarios")

# ğŸ”¹ FunÃ§Ã£o para hash de senha
def hash_senha(senha):
    return hashlib.sha256(senha.encode()).hexdigest()

# ğŸ”¹ FunÃ§Ã£o para verificar credenciais
def autenticar_usuario(usuario, senha):
    usuarios = users_sheet.get_all_records()
    senha_hash = hash_senha(senha)
    
    for user in usuarios:
        if user['usuario'] == usuario and user['senha'] == senha_hash:
            return True
    return False

# ğŸ”¹ Tela de Login
def login():
    st.title("Login - SeleÃ§Ã£o Complementar 2025")
    
    usuario = st.text_input("UsuÃ¡rio:")
    senha = st.text_input("Senha:", type="password")
    
    if st.button("Entrar"):
        if autenticar_usuario(usuario, senha):
            st.session_state['usuario'] = usuario
            st.session_state['logado'] = True
            data_hora = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            users_sheet.append_row([usuario, data_hora])
            st.success(f"Bem-vindo, {usuario}!")
            st.experimental_rerun()
        else:
            st.error("UsuÃ¡rio ou senha incorretos. Tente novamente.")

# ğŸ”¹ Tela Principal (apÃ³s login)
def main_app():
    st.title("SeleÃ§Ã£o Complementar 2025 - 2Âª CIA TIGRE")

    # ğŸ”¹ Inicializando lista de conscritos
    if "conscritos" not in st.session_state:
        st.session_state.conscritos = []

    # ğŸ”¹ Peso para menÃ§Ãµes
    peso_mencao = {
        "Excelente": 10,
        "Muito Bom": 8,
        "Bom": 6,
        "Regular": 4,
        "Insuficiente": 0
    }

    # ğŸ”¹ FunÃ§Ã£o para coletar dados dos conscritos
    def coletar_dados():
        st.subheader("Cadastro de Conscritos")
        nome = st.text_input("Nome do conscrito:")
        if not nome:
            st.warning("Por favor, preencha o nome do conscrito.")
            return

        col1, col2 = st.columns(2)
        with col1:
            obeso = st.radio("Ã‰ obeso?", ("Sim", "NÃ£o"))
            passou_saude = st.radio("Passou na saÃºde?", ("Sim", "NÃ£o"))
            passou_teste_fisico = st.radio("Passou no teste fÃ­sico?", ("Sim", "NÃ£o"))
            menÃ§Ã£o = st.selectbox("MenÃ§Ã£o na entrevista:", ["Excelente", "Muito Bom", "Bom", "Regular", "Insuficiente"])
            contra_indicado = st.radio("Ã‰ contra indicado?", ("Sim", "NÃ£o"))

        with col2:
            apto_instrucao = st.radio("Apto pela equipe de instruÃ§Ã£o?", ("Sim", "NÃ£o"))
            habilidades = st.number_input("Habilidades (quantidade):", min_value=0, max_value=10)
            habilidades_descricao = st.text_area("Quais habilidades? (Descreva)")

        # VerificaÃ§Ã£o de reprovaÃ§Ã£o
        status = "Apto"
        if obeso == "Sim":
            status = "Inapto - Obesidade"
        elif passou_saude == "NÃ£o":
            status = "Inapto - SaÃºde"
        elif passou_teste_fisico == "NÃ£o":
            status = "Inapto - Teste FÃ­sico"
        elif contra_indicado == "Sim":
            status = "Inapto - Contraindicado"
        elif apto_instrucao == "NÃ£o":
            status = "Inapto - NÃ£o Apto pela InstruÃ§Ã£o"

        habilidades_str = str(habilidades) if habilidades > 0 else "-"
        habilidades_descricao = habilidades_descricao if habilidades > 0 else "-"

        conscritos_existentes = [c[1] for c in st.session_state.conscritos]
        if nome in conscritos_existentes:
            st.warning(f"O conscrito {nome} jÃ¡ foi registrado.")
            return

        gravar = st.button("ğŸ¦…GravarğŸ¦…")
        if gravar:
            sheet.append_row([nome, menÃ§Ã£o, habilidades_str, habilidades_descricao, peso_mencao[menÃ§Ã£o], status])
            st.session_state.conscritos.append((nome, menÃ§Ã£o, habilidades_str, habilidades_descricao, peso_mencao[menÃ§Ã£o], status))
            st.success(f"âœ… Dados de {nome} salvos com sucesso!")

    coletar_dados()

# ğŸ”¹ Executar Login antes do app principal
if "logado" not in st.session_state or not st.session_state["logado"]:
    login()
else:
    main_app()
